# Use an official CUDA-enabled PyTorch image as the base image
FROM pytorch/pytorch:1.8.1-cuda11.1-cudnn8-runtime
ENV DEBIAN_FRONTEND=noninteractive
ENV NVIDIA_VISIBLE_DEVICES=all
ENV NVIDIA_DRIVER_CAPABILITIES=all

# Set the working directory in the container
WORKDIR /backend

# Install system dependencies and Python 3.7
RUN apt-get update && apt-get install -y git wget libgl1-mesa-glx libglib2.0-0 libsndfile1 curl python3.7 python3-pip && \
    rm -rf /var/lib/apt/lists/*

# Install poetry
RUN pip install poetry

# Copy the poetry configuration files for the Flask app
COPY backend/pyproject.toml backend/poetry.lock /backend/

# Install backend dependencies using poetry
RUN poetry config virtualenvs.create true && \
    poetry install --no-interaction --no-ansi

# Copy the entire backend directory
COPY backend/ .

# Install Python 3.7 virtual environment
RUN python3.7 -m pip install virtualenv

# Create a virtual environment for wav2lip with Python 3.7
RUN python3.7 -m virtualenv /backend/wav2lip-hq/wav2lipenv
# Activate the wav2lip virtual environment for wav2lip requirements
ENV PATH="/backend/wav2lip-hq/wav2lipenv/bin:$PATH"

# Navigate to wav2lip-hq and install its dependencies
WORKDIR /backend/wav2lip-hq
RUN pip install gdown
RUN pip install --no-cache-dir -r requirements.txt

# Return to the main backend directory
WORKDIR /backend

# Set the entry point to run the Flask app with the poetry environment
ENTRYPOINT ["poetry", "run", "python", "app.py"]

# Expose the default port for Flask
EXPOSE 5000
